- name: configure mysql server
  hosts: mysql
  become: yes
  vars:
    mysql_root_password: ExpenseApp@1
  tasks:
  - name: Install MySQL libraries
    ansible.builtin.pip:
      name: "{{ item }}"
      executable: pip3.9
    loop:
    - cryptography
    - PyMySQL
    
  # - name: install packages
  #   ansible.builtin.package:
  #     name: "{{ item.name }}"
  #     state: "{{ item.state }}"
  #   loop:
  #   - { name: 'git', state: 'present'}
  #   - { name: 'mysql', state: 'absent'}
  #   - { name: 'gcc', state: 'present'}
  #   - { name: 'zip', state: 'absent'}

  - name: Install MySQL server
    ansible.builtin.package:
      name: "{{ item.name }}"
      state: "{{ item.state }}"
    loop:
    - { name: 'mysql-server', state: 'present'}
    
  - name: start and enable mysql server
    ansible.builtin.service:
      name: mysqld
      state: started
      enabled: yes

  - name: connect to mysql server
    community.mysql.mysql_info:
      login_user: root
      login_password: "{{ mysql_root_password }}"
      login_host: mysql.gopiath.store
    register: mysql_info
    ignore_errors: true

  - name: print the output
    ansible.builtin.debug:
      msg: "MySQL info: {{ mysql_info }}"

  - name: setup root password
    ansible.builtin.command: " mysql_secure_installation --set-root-pass {{ mysql_root_password }} "
    when: mysql_info.failed is true